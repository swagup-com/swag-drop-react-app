{
  "name": "swagdrop",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@aws-sdk/client-s3": "^3.88.0",
    "@emotion/react": "^11.9.0",
    "@emotion/styled": "^11.8.1",
    "@hookform/resolvers": "^2.8.8",
    "@mui/icons-material": "^5.6.2",
    "@mui/material": "^5.7.0",
    "@mui/styles": "^5.7.0",
    "@swagup-com/react-ds-components": "^0.0.9",
    "@testing-library/jest-dom": "^5.16.4",
    "@testing-library/react": "^12.0.0",
    "@testing-library/user-event": "^12.0.0",
    "axios": "^0.27.2",
    "clsx": "^1.1.1",
    "dayjs": "^1.11.2",
    "dayjs-business-time": "^1.0.4",
    "loglevel": "^1.8.0",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-hook-form": "^7.31.1",
    "react-number-format": "^4.9.3",
    "react-phone-number-input": "^3.1.52",
    "react-query": "^3.39.0",
    "react-router-dom": "^6.3.0",
    "react-scripts": "5.0.1",
    "react-scrollbars-custom": "^4.0.27",
    "react-swipeable-views": "^0.14.0",
    "web-vitals": "^2.1.4",
    "yup": "^0.32.11"
  },
  "devDependencies": {
    "standard-version": "^9.3.2"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "ci:build": "npm-run-all clean verify build:*",
    "ci:release": "standard-version -a --releaseCommitMessageFormat=\"chore(release): {{currentTag}}; [skip ci]\"",
    "ci:deploy": "npm-run-all deploy:*",
    "ci:plan": "npm-run-all artifact:* plan:*",
    "clean": "rm -rf dist build",
    "build:init": "mkdir -p dist",
    "build:app": "react-app-rewired build",
    "build:dist": "npm-run-all build:dist:*",
    "build:dist:version": "echo ${npm_package_version}${npm_config_version_suffix:+-${npm_config_version_suffix}} >> ./dist/version.txt",
    "build:dist:app": "cp -rf ./build ./dist",
    "build:dist:terraform": "cp -rf .infrastructure ./dist/infrastructure",
    "build:dist:artifact": "(cd dist; zip -r swagdrop-ui-build-artifact-${npm_package_version}${npm_config_version_suffix:+-${npm_config_version_suffix}}.zip *)",
    "build:dist:push": "aws s3 cp ./dist/swagdrop-ui-build-artifact-${npm_package_version}${npm_config_version_suffix:+-${npm_config_version_suffix}}.zip ${npm_config_artifact_bucket_uri:-${npm_package_config_artifactBucketUri}}/swagdrop-ui/swagdrop-ui-build-artifact-${npm_package_version}${npm_config_version_suffix:+-${npm_config_version_suffix}}.zip",
    "plan:init": "npm-run-all plan:terraform:* --deploy_version=$(cat ./dist/version.txt) --plan_version=${npm_config_plan_version:-${npm_package_config_planVersion}}",
    "plan:terraform:init": "terraform -chdir=./dist/infrastructure/tf init --backend-config=./config/backend/${npm_config_environment:-${npm_package_config_environment}}.backend.tfvars",
    "plan:terraform:plan": "terraform -chdir=./dist/infrastructure/tf plan --var-file=./config/environments/${npm_config_environment:-${npm_package_config_environment}}.tfvars -out=${npm_config_plan_version:-${npm_package_config_planVersion}}tfplan",
    "plan:publish": "aws s3 cp ./dist/infrastructure/tf/${npm_config_plan_version:-${npm_package_config_planVersion}}tfplan ${npm_config_artifact_bucket_uri:-${npm_package_config_artifactBucketUri}}/swagdrop-ui/tfplans/${npm_config_plan_version:-${npm_package_config_planVersion}}tfplan",
    "deploy:init": "npm-run-all artifact:*",
    "deploy:config": "npm-run-all deploy:config:*",
    "deploy:config:app": "export SEM_VER=$(cat ./dist/version.txt); jq -s '.[0] * .[1]' dist/infrastructure/config/json/base-config.json dist/infrastructure/config/json/${npm_config_environment:-${npm_package_config_environment}}-config.json | envsubst > ./dist/build/config.json",
    "deploy:config:module": "./dist/infrastructure/scripts/replace_tokens.sh -s dist/infrastructure/config/sed/${npm_config_environment:-${npm_package_config_environment}}-config.sed ./dist/build/",
    "deploy:plan": "npm-run-all deploy:plan:* --deploy_version=$(cat ./dist/version.txt) --plan_version=${npm_config_plan_version:-${npm_package_config_planVersion}}",
    "deploy:plan:retrieval": "aws s3 cp ${npm_config_artifact_bucket_uri:-${npm_package_config_artifactBucketUri}}/swagdrop-ui/tfplans/${npm_config_plan_version:-${npm_package_config_planVersion}}tfplan ./dist/infrastructure/tf/${npm_config_plan_version:-${npm_package_config_planVersion}}tfplan",
    "deploy:terraform": "npm-run-all deploy:terraform:*",
    "deploy:terraform:init": "terraform -chdir=./dist/infrastructure/tf init --backend-config=./config/backend/${npm_config_environment:-${npm_package_config_environment}}.backend.tfvars",
    "deploy:terraform:apply": "terraform -chdir=./dist/infrastructure/tf apply --auto-approve ${npm_config_plan_version:-${npm_package_config_planVersion}}tfplan",
    "deploy:web": "dist/infrastructure/scripts/aws-assume-role.sh ${npm_config_aws_terraform_role:+-r ${npm_config_aws_terraform_role}} aws s3 cp ./dist/build ${npm_config_target_artifact_bucket_uri:-${npm_package_config_targetArtifactBucketUri}} --recursive",
    "artifact:retrieve": "npm-run-all artifact:retrieve:*",
    "artifact:retrieve:init": "mkdir -p dist",
    "artifact:retrieve:extract": "export ARTIFACT_VERSION=$([ ${npm_config_artifact_version} == 'latest' ] && aws s3 ls ${npm_config_artifact_bucket_uri:-${npm_package_config_artifactBucketUri}}/swagdrop-ui/ | sort -r -k 1,1 | tr -s ' ' | cut -d' ' -f 4| head -1 | sed 's/swagdrop-ui-build-artifact-\\(.*\\).zip/\\1/g' || echo ${npm_config_artifact_version}); npm-run-all --final-artifact-version=$ARTIFACT_VERSION artifact:retrieve:extract:*",
    "artifact:retrieve:extract:get": "aws s3 cp ${npm_config_artifact_bucket_uri:-${npm_package_config_artifactBucketUri}}/swagdrop-ui/swagdrop-ui-build-artifact-${npm_config_final_artifact_version:-${npm_package_version}}.zip ./dist",
    "artifact:retrieve:extract:unzip": "(cd dist; unzip swagdrop-ui-build-artifact-${npm_config_final_artifact_version:-${npm_package_version}}.zip)",
    "verify": "npm run test -- --watchAll=false",
    "terraform:destroy": ""
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
